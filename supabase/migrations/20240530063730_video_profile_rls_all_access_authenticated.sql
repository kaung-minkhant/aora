create table "public"."profile" (
    "id" uuid not null,
    "created_at" timestamp with time zone not null default now(),
    "email" text,
    "user_name" text,
    "avater" text
);


alter table "public"."profile" enable row level security;

create table "public"."video" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "video" text,
    "prompt" text,
    "title" text,
    "thumbnail" text
);


alter table "public"."video" enable row level security;

CREATE UNIQUE INDEX profile_pkey ON public.profile USING btree (id);

CREATE UNIQUE INDEX video_pkey ON public.video USING btree (id);

alter table "public"."profile" add constraint "profile_pkey" PRIMARY KEY using index "profile_pkey";

alter table "public"."video" add constraint "video_pkey" PRIMARY KEY using index "video_pkey";

alter table "public"."profile" add constraint "profile_id_fkey" FOREIGN KEY (id) REFERENCES auth.users(id) ON UPDATE CASCADE not valid;

alter table "public"."profile" validate constraint "profile_id_fkey";

grant delete on table "public"."profile" to "anon";

grant insert on table "public"."profile" to "anon";

grant references on table "public"."profile" to "anon";

grant select on table "public"."profile" to "anon";

grant trigger on table "public"."profile" to "anon";

grant truncate on table "public"."profile" to "anon";

grant update on table "public"."profile" to "anon";

grant delete on table "public"."profile" to "authenticated";

grant insert on table "public"."profile" to "authenticated";

grant references on table "public"."profile" to "authenticated";

grant select on table "public"."profile" to "authenticated";

grant trigger on table "public"."profile" to "authenticated";

grant truncate on table "public"."profile" to "authenticated";

grant update on table "public"."profile" to "authenticated";

grant delete on table "public"."profile" to "service_role";

grant insert on table "public"."profile" to "service_role";

grant references on table "public"."profile" to "service_role";

grant select on table "public"."profile" to "service_role";

grant trigger on table "public"."profile" to "service_role";

grant truncate on table "public"."profile" to "service_role";

grant update on table "public"."profile" to "service_role";

grant delete on table "public"."video" to "anon";

grant insert on table "public"."video" to "anon";

grant references on table "public"."video" to "anon";

grant select on table "public"."video" to "anon";

grant trigger on table "public"."video" to "anon";

grant truncate on table "public"."video" to "anon";

grant update on table "public"."video" to "anon";

grant delete on table "public"."video" to "authenticated";

grant insert on table "public"."video" to "authenticated";

grant references on table "public"."video" to "authenticated";

grant select on table "public"."video" to "authenticated";

grant trigger on table "public"."video" to "authenticated";

grant truncate on table "public"."video" to "authenticated";

grant update on table "public"."video" to "authenticated";

grant delete on table "public"."video" to "service_role";

grant insert on table "public"."video" to "service_role";

grant references on table "public"."video" to "service_role";

grant select on table "public"."video" to "service_role";

grant trigger on table "public"."video" to "service_role";

grant truncate on table "public"."video" to "service_role";

grant update on table "public"."video" to "service_role";

create policy "All access for authenticated users"
on "public"."profile"
as permissive
for all
to authenticated
using (true);


create policy "All access for authenticated user"
on "public"."video"
as permissive
for all
to authenticated
using (true);



